{"version":3,"sources":["../../src/cli/index.js"],"names":["program","command","description","option","action","init","defaultWatchExt","defaultBotpressCloudEndpoint","alias","collectArgs","start","list","create","update","migrate","login","logout","ghostSync","cloudPair","version","parse","process","argv","args","length","help"],"mappings":";;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AAEA;;;;AAEAA,oBACGC,OADH,CACW,gBADX,EAEGC,WAFH,CAEe,6EAFf,EAGGC,MAHH,CAGU,WAHV,EAGuB,gDAHvB,EAIGC,MAJH,CAIUC,cAJV;;AAMA,MAAMC,kBAAkB,qBAAxB;AACA,MAAMC,+BAA+B,wBAArC;;AAEAP,oBACGC,OADH,CACW,cADX,EAEGO,KAFH,CAES,GAFT,EAGGN,WAHH,CAGe,sBAHf,EAIGC,MAJH,CAIU,aAJV,EAIyB,kDAJzB,EAKGA,MALH,CAMI,yBANJ,EAOK,4DAA2DG,eAAgB,GAPhF,EAQIA,eARJ,EAUGH,MAVH,CAWI,kBAXJ,EAYK,iFAZL,EAaIM,iBAbJ,EAcI,EAdJ,EAgBGN,MAhBH,CAiBI,0BAjBJ,EAkBK,8GAlBL,EAmBIM,iBAnBJ,EAoBI,EApBJ,EAsBGN,MAtBH,CAsBU,eAtBV,EAsB2B,6BAtB3B,EAuBGC,MAvBH,CAuBUM,eAvBV;;AAyBAV,oBACGC,OADH,CACW,MADX,EAEGO,KAFH,CAES,IAFT,EAGGN,WAHH,CAGe,wBAHf,EAIGE,MAJH,CAIUO,cAJV;;AAMAX,oBACGC,OADH,CACW,QADX,EAEGO,KAFH,CAES,GAFT,EAGGN,WAHH,CAGe,qDAHf,EAIGE,MAJH,CAIUQ,gBAJV;;AAMAZ,oBACGC,OADH,CACW,kBADX,EAEGO,KAFH,CAES,IAFT,EAGGN,WAHH,CAGe,4DAHf,EAIGE,MAJH,CAIUS,gBAJV;;AAMAb,oBACGC,OADH,CACW,uBADX,EAEGC,WAFH,CAEe,yCAFf,EAGGE,MAHH,CAGUU,iBAHV;;AAKAd,oBACGC,OADH,CACW,wBADX,EAEGC,WAFH,CAGI,2GAHJ,EAKGE,MALH,CAKUW,WALV;;AAOAf,oBACGC,OADH,CACW,yBADX,EAEGC,WAFH,CAGI,yGAHJ,EAKGE,MALH,CAKUY,YALV;;AAOAhB,oBACGC,OADH,CACW,6BADX,EAEGC,WAFH,CAEe,2EAFf,EAGGE,MAHH,CAGUa,mBAHV;;AAKAjB,oBACGC,OADH,CACW,wBADX,EAEGC,WAFH,CAEe,sEAFf,EAGGC,MAHH,CAII,2BAJJ,EAKK,wDAAuDI,4BAA6B,GALzF,EAMIA,4BANJ,EAQGH,MARH,CAQUc,mBARV;;AAUAlB,oBACGmB,OADH,CACW,+BADX,EAEGjB,WAFH,CAEe,4CAFf,EAGGkB,KAHH,CAGSC,QAAQC,IAHjB;;AAKA,IAAI,CAACtB,oBAAQuB,IAAR,CAAaC,MAAlB,EAA0B;AACxBxB,sBAAQyB,IAAR;AACD","file":"index.js","sourcesContent":["import program from 'commander'\n\nimport init from './init'\nimport start from './start'\nimport create from './create'\nimport update from './update'\nimport migrate from './migrate'\nimport list from './list'\nimport { login, logout } from './auth'\nimport ghostSync from './ghost-sync'\nimport cloudPair from './cloudPair'\n\nimport { getBotpressVersion, collectArgs } from '../util'\n\nprogram\n  .command('init [dirName]')\n  .description('Create a new bot in new directory (or in current directory if not provided)')\n  .option('-y, --yes', 'Say yes to every prompt and use default values')\n  .action(init)\n\nconst defaultWatchExt = '.js,.jsx,.json,.yml'\nconst defaultBotpressCloudEndpoint = 'https://botpress.cloud'\n\nprogram\n  .command('start [path]')\n  .alias('s')\n  .description('Starts running a bot')\n  .option('-w, --watch', 'Watch bot for changes, and restart automatically')\n  .option(\n    '--watchExt <extensions>',\n    `When watching, which file extensions to watch. Default: \"${defaultWatchExt}\"`,\n    defaultWatchExt\n  )\n  .option(\n    '--watchDir <dir>',\n    `When watching, what to watch. Can be repeated. Default: Directory of botfile.js`,\n    collectArgs,\n    []\n  )\n  .option(\n    '--watchIgnore <file|dir>',\n    `When watching, what to ignore. Can be repeated. Default: dataDir, watchExt from botfile.js, and node_modules`,\n    collectArgs,\n    []\n  )\n  .option('-i, --inspect', 'Inspect bot with \"debugger\"')\n  .action(start)\n\nprogram\n  .command('list')\n  .alias('ls')\n  .description('List installed modules')\n  .action(list)\n\nprogram\n  .command('create')\n  .alias('c')\n  .description('Create a new module for development or distribution')\n  .action(create)\n\nprogram\n  .command('update [version]')\n  .alias('up')\n  .description('Updates your bot and all the modules to a specific version')\n  .action(update)\n\nprogram\n  .command('migrate <fromVersion>')\n  .description('Migrates the current bot from version X')\n  .action(migrate)\n\nprogram\n  .command('login <bot-server-url>')\n  .description(\n    'Login to the given bot instance. Provide the full base URL for the bot, like https://mybot.herokuapp.com.'\n  )\n  .action(login)\n\nprogram\n  .command('logout [bot-server-url]')\n  .description(\n    'Forget saved auth for the given bot instance, or all recorded auth tokens (if bot URL is not specified)'\n  )\n  .action(logout)\n\nprogram\n  .command('ghost-sync <bot-server-url>')\n  .description('Pull the ghost content from the remote bot instance and apply it locally.')\n  .action(ghostSync)\n\nprogram\n  .command('cloud-pair <api-token>')\n  .description('Pairs your local bot with the Botpress Cloud (supercharges your bot)')\n  .option(\n    '--endpoint <endpoint-url>',\n    `Change the Botpress Cloud server endpoint. Default: \"${defaultBotpressCloudEndpoint}\"`,\n    defaultBotpressCloudEndpoint\n  )\n  .action(cloudPair)\n\nprogram\n  .version(getBotpressVersion())\n  .description('Easily create, manage and extend chatbots.')\n  .parse(process.argv)\n\nif (!program.args.length) {\n  program.help()\n}\n"]}