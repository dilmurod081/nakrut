{"version":3,"sources":["../../src/cli/search.js"],"names":["module","exports","argument","options","getKeywords","Promise","method","schema","properties","keyword","description","chalk","white","pattern","message","required","prompt","delimiter","start","fromCallback","callback","get","then","printResult","console","log"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEAA,OAAOC,OAAP,GAAiB,CAACC,QAAD,EAAWC,OAAX,KAAuB;AACtC,QAAMC,cAAcC,mBAAQC,MAAR,CAAeJ,YAAY;AAC7C,QAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAChC,aAAOA,QAAP;AACD,KAFD,MAEO;AACL,YAAMK,SAAS;AACbC,oBAAY;AACVC,mBAAS;AACPC,yBAAaC,gBAAMC,KAAN,CAAY,UAAZ,CADN;AAEPC,qBAAS,+BAFF;AAGPC,qBAAS,gEAHF;AAIPC,sBAAU;AAJH;AADC;AADC,OAAf;;AAWAC,uBAAOF,OAAP,GAAiB,EAAjB;AACAE,uBAAOC,SAAP,GAAmB,EAAnB;AACAD,uBAAOE,KAAP;;AAEA,aAAOb,mBAAQc,YAAR,CAAqBC,YAAY;AACtCJ,yBAAOK,GAAP,CAAWd,MAAX,EAAmBa,QAAnB;AACD,OAFM,EAEJE,IAFI,CAEC,CAAC,EAAEb,OAAF,EAAD,KAAiBA,OAFlB,CAAP;AAGD;AACF,GAvBmB,CAApB;;AAyBA,QAAMc,cAAcd,WAAW;AAC7Be,YAAQC,GAAR,CAAY,kCAAkChB,OAA9C;AACD,GAFD;;AAIAL,cAAYF,QAAZ,EAAsBoB,IAAtB,CAA2BC,WAA3B;AACD,CA/BD","file":"search.js","sourcesContent":["import prompt from 'prompt'\nimport chalk from 'chalk'\nimport Promise from 'bluebird'\n\nmodule.exports = (argument, options) => {\n  const getKeywords = Promise.method(argument => {\n    if (typeof argument === 'string') {\n      return argument\n    } else {\n      const schema = {\n        properties: {\n          keyword: {\n            description: chalk.white('keyword:'),\n            pattern: /^[a-zA-Z0-9][a-zA-Z0-9-_\\.]+$/,\n            message: 'keyword must be letters, digits, dashes, underscores and dots.',\n            required: true\n          }\n        }\n      }\n\n      prompt.message = ''\n      prompt.delimiter = ''\n      prompt.start()\n\n      return Promise.fromCallback(callback => {\n        prompt.get(schema, callback)\n      }).then(({ keyword }) => keyword)\n    }\n  })\n\n  const printResult = keyword => {\n    console.log('You are actualy looking for: ' + keyword)\n  }\n\n  getKeywords(argument).then(printResult)\n}\n"]}