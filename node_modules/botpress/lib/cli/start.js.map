{"version":3,"sources":["../../src/cli/start.js"],"names":["getPath","path","os","platform","shortPath","toString","replace","module","exports","projectPath","options","Botpress","resolve","botpress","require","__dirname","err","util","print","message","stack","process","exit","botfilePath","join","fs","existsSync","chalk","bold","botfile","getDefaultWatchIgnore","dataDir","getDataLocation","opts","watch","w","argvWithoutWatch","argv","filter","arg","test","nodemonOptions","cwd","exec","ext","watchExt","watchDir","length","undefined","ignore","watchIgnore","stdin","restartable","mon","on","changedFile","two","emit","setTimeout","bot","start"],"mappings":"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","file":"start.js","sourcesContent":["import os from 'os'\nimport path from 'path'\nimport fs from 'fs'\nimport util from '../util'\nimport chalk from 'chalk'\nimport nodemon from 'nodemon'\nimport { monitorCtrlC } from 'monitorctrlc'\nimport { execSync } from 'child_process'\n\nconst getPath = path => {\n  if (os.platform() === 'win32') {\n    const shortPath = execSync(`@echo off && for %I in (\"${path}\") do echo %~sI`)\n    return shortPath.toString('utf8').replace(/(\\n|\\r)+$/, '')\n  } else {\n    return path\n  }\n}\n\n/**\n * Entry point of botpress\n *\n * It will do the following things:\n *\n * 1. Find botpress instance creator in `node_modules` folder in current project.\n * 2. Find the `botfile.js` which will be injected into the creator to create the instance.\n * 3. Start the botpress instance.\n */\nmodule.exports = (projectPath, options) => {\n  let Botpress = null\n\n  if (!projectPath || typeof projectPath !== 'string') {\n    projectPath = '.'\n  }\n\n  projectPath = path.resolve(projectPath)\n\n  try {\n    const botpress = require(path.resolve(__dirname, '..'))\n    Botpress = botpress.Botpress\n  } catch (err) {\n    util.print('error', err.message)\n    util.print('error', err.stack)\n    util.print('error', '(fatal) Could not load the local version of botpress')\n    util.print('Hint: 1) have you used `botpress init` to create a new bot the proper way?')\n    util.print('Hint: 2) Do you have read and write permissions on the current directory?')\n    util.print('-------------')\n    util.print(\n      'If none of the above works, this might be a bug in botpress. ' +\n        'Please contact the Botpress Team on gitter and provide the printed error above.'\n    )\n    process.exit(1)\n  }\n\n  const botfilePath = path.join(projectPath, 'botfile.js')\n  if (!fs.existsSync(botfilePath)) {\n    util.print('error', `(fatal) No ${chalk.bold('botfile.js')} file found at: ${botfilePath}`)\n    process.exit(1)\n  }\n\n  const botfile = require(botfilePath)\n\n  const getDefaultWatchIgnore = () => {\n    const dataDir = util.getDataLocation(botfile.dataDir, projectPath)\n    return [dataDir, 'node_modules']\n  }\n\n  const opts = options.opts()\n  if (opts.watch || opts.w) {\n    util.print('info', '*** watching files for changes ***')\n\n    const argvWithoutWatch = process.argv.filter(arg => !/^(--watch|-w)$/.test(arg))\n    argvWithoutWatch[0] = getPath(argvWithoutWatch[0])\n\n    const nodemonOptions = {\n      cwd: process.cwd(),\n      exec: argvWithoutWatch.join(' '),\n      ext: opts.watchExt,\n      watch: opts.watchDir && opts.watchDir.length ? opts.watchDir : undefined,\n      ignore: opts.watchIgnore && opts.watchIgnore.length ? opts.watchIgnore : getDefaultWatchIgnore(),\n      stdin: false,\n      restartable: false\n    }\n\n    const mon = nodemon(nodemonOptions)\n    mon.on('restart', (changedFile, two) =>\n      util.print('info', '*** restarting botpress because of file change: ', changedFile)\n    )\n\n    monitorCtrlC(() => {\n      mon.emit('quit')\n      setTimeout(() => process.exit(), 100)\n    })\n  } else {\n    const bot = new Botpress({ botfile, options })\n    bot.start()\n  }\n}\n"]}