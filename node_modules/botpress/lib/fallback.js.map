{"version":3,"sources":["../src/fallback.js"],"names":["module","exports","bp","middleware","name","type","order","description","handler","event","next","_","isFunction","fallbackHandler"],"mappings":";;AAAA;;;;AACA;;;;;;AAEAA,OAAOC,OAAP,GAAiBC,MAAM;AACrB,QAAMC,aAAa;AACjBC,UAAM,UADW;AAEjBC,UAAM,UAFW;AAGjBC,WAAO,GAHU;AAIjBN,YAAQ,UAJS;AAKjBO,iBAAa,yFALI;AAMjBC,aAAS,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACxB,UAAIC,iBAAEC,UAAF,CAAaV,GAAGW,eAAhB,CAAJ,EAAsC;AACpCX,WAAGW,eAAH,CAAmBJ,KAAnB,EAA0BC,IAA1B;AACD;AACF;AAVgB,GAAnB;;AAaA,SAAO,EAAEP,UAAF,EAAP;AACD,CAfD","file":"fallback.js","sourcesContent":["import _ from 'lodash'\nimport listeners from './listeners'\n\nmodule.exports = bp => {\n  const middleware = {\n    name: 'fallback',\n    type: 'incoming',\n    order: 200,\n    module: 'botpress',\n    description: 'The built-in fallback handler. You may override this by implementing bp.fallbackHandler',\n    handler: (event, next) => {\n      if (_.isFunction(bp.fallbackHandler)) {\n        bp.fallbackHandler(event, next)\n      }\n    }\n  }\n\n  return { middleware }\n}\n"]}