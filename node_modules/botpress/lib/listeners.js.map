{"version":3,"sources":["../src/listeners.js"],"names":["matches","conditions","event","_","isPlainObject","text","pairs","toPairs","every","key","comparrer","eventValue","get","isFunction","isRegExp","test","isString","isNil","captured","a","tail","exec","forEach","m","push","isEqual","hear","callback","next","result","isArray","conditionsItem","length","module","exports"],"mappings":";;AAAA;;;;;;AAEA,MAAMA,UAAU,CAACC,UAAD,EAAaC,KAAb,KAAuB;AACrC,MAAI,CAACC,iBAAEC,aAAF,CAAgBH,UAAhB,CAAL,EAAkC;AAChCA,iBAAa,EAAEI,MAAMJ,UAAR,EAAb;AACD;;AAED,QAAMK,QAAQH,iBAAEI,OAAF,CAAUN,UAAV,CAAd;AACA,SAAOE,iBAAEK,KAAF,CAAQF,KAAR,EAAe,CAAC,CAACG,GAAD,EAAMC,SAAN,CAAD,KAAsB;AAC1C,UAAMC,aAAaR,iBAAES,GAAF,CAAMV,KAAN,EAAaO,GAAb,EAAkB,IAAlB,CAAnB;;AAEA,QAAIN,iBAAEU,UAAF,CAAaH,SAAb,CAAJ,EAA6B;AAC3B,aAAOA,UAAUC,UAAV,EAAsBT,KAAtB,MAAiC,IAAxC;AACD,KAFD,MAEO,IAAIC,iBAAEW,QAAF,CAAWJ,SAAX,CAAJ,EAA2B;AAChC,YAAMV,UAAUU,UAAUK,IAAV,CAAeJ,UAAf,CAAhB;;AAEA,UAAIX,WAAWG,iBAAEa,QAAF,CAAWL,UAAX,CAAf,EAAuC;AACrC,YAAIR,iBAAEc,KAAF,CAAQf,MAAMgB,QAAd,CAAJ,EAA6B;AAC3BhB,gBAAMgB,QAAN,GAAiB,EAAjB;AACD;;AAED,cAAMC,IAAIhB,iBAAEiB,IAAF,CAAOV,UAAUW,IAAV,CAAeV,UAAf,CAAP,CAAV;AACAQ,UAAEG,OAAF,CAAUC,KAAKrB,MAAMgB,QAAN,CAAeM,IAAf,CAAoBD,CAApB,CAAf;AACD;;AAED,aAAOvB,OAAP;AACD,KAbM,MAaA;AACL,aAAOG,iBAAEsB,OAAF,CAAUf,SAAV,EAAqBC,UAArB,CAAP;AACD;AACF,GArBM,CAAP;AAsBD,CA5BD;;AA8BA,MAAMe,OAAO,CAACzB,UAAD,EAAa0B,QAAb,KAA0B;AACrC,SAAO,CAACzB,KAAD,EAAQ0B,IAAR,KAAiB;AACtB,QAAIC,SAAS,KAAb;AACA,QAAI1B,iBAAEU,UAAF,CAAaZ,UAAb,CAAJ,EAA8B;AAC5B4B,eAAS5B,WAAWC,KAAX,CAAT;AACD,KAFD,MAEO,IAAIC,iBAAE2B,OAAF,CAAU7B,UAAV,CAAJ,EAA2B;AAChC,WAAK,MAAM8B,cAAX,IAA6B9B,UAA7B,EAAyC;AACvC,YAAID,QAAQ+B,cAAR,EAAwB7B,KAAxB,CAAJ,EAAoC;AAClC2B,mBAAS,IAAT;AACA;AACD;AACF;AACF,KAPM,MAOA;AACLA,eAAS7B,QAAQC,UAAR,EAAoBC,KAApB,CAAT;AACD;;AAED,QAAI2B,UAAU1B,iBAAEU,UAAF,CAAac,QAAb,CAAd,EAAsC;AACpC,UAAIA,SAASK,MAAT,IAAmB,CAAvB,EAA0B;AACxB,YAAI7B,iBAAEU,UAAF,CAAae,IAAb,CAAJ,EAAwB;AACtBA;AACD;AACDD,iBAASzB,KAAT;AACD,OALD,MAKO;AACLyB,iBAASzB,KAAT,EAAgB0B,IAAhB;AACD;AACF,KATD,MASO;AACL,UAAIzB,iBAAEU,UAAF,CAAae,IAAb,CAAJ,EAAwB;AACtBA;AACD;AACF;AACF,GA7BD;AA8BD,CA/BD;;AAiCAK,OAAOC,OAAP,GAAiB,EAAER,IAAF,EAAQ1B,OAAR,EAAjB","file":"listeners.js","sourcesContent":["import _ from 'lodash'\n\nconst matches = (conditions, event) => {\n  if (!_.isPlainObject(conditions)) {\n    conditions = { text: conditions }\n  }\n\n  const pairs = _.toPairs(conditions)\n  return _.every(pairs, ([key, comparrer]) => {\n    const eventValue = _.get(event, key, null)\n\n    if (_.isFunction(comparrer)) {\n      return comparrer(eventValue, event) === true\n    } else if (_.isRegExp(comparrer)) {\n      const matches = comparrer.test(eventValue)\n\n      if (matches && _.isString(eventValue)) {\n        if (_.isNil(event.captured)) {\n          event.captured = []\n        }\n\n        const a = _.tail(comparrer.exec(eventValue))\n        a.forEach(m => event.captured.push(m))\n      }\n\n      return matches\n    } else {\n      return _.isEqual(comparrer, eventValue)\n    }\n  })\n}\n\nconst hear = (conditions, callback) => {\n  return (event, next) => {\n    let result = false\n    if (_.isFunction(conditions)) {\n      result = conditions(event)\n    } else if (_.isArray(conditions)) {\n      for (const conditionsItem of conditions) {\n        if (matches(conditionsItem, event)) {\n          result = true\n          break\n        }\n      }\n    } else {\n      result = matches(conditions, event)\n    }\n\n    if (result && _.isFunction(callback)) {\n      if (callback.length <= 1) {\n        if (_.isFunction(next)) {\n          next()\n        }\n        callback(event)\n      } else {\n        callback(event, next)\n      }\n    } else {\n      if (_.isFunction(next)) {\n        next()\n      }\n    }\n  }\n}\n\nmodule.exports = { hear, matches }\n"]}