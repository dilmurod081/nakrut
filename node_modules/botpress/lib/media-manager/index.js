'use strict';

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _util = require('../util');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

const defaultDir = './media';

module.exports = ({ botfile, logger, ghostManager, projectLocation }) => {
  const mediaDir = _path2.default.resolve(projectLocation, botfile.mediaDir || defaultDir);

  ghostManager.addRootFolder(mediaDir, { isBinary: true });

  const saveFile = (() => {
    var _ref = _asyncToGenerator(function* (filename, buffer) {
      filename = `${(0, _util.safeId)(20)}-${_path2.default.basename(filename)}`;
      yield ghostManager.upsertFile(mediaDir, filename, buffer);
      return filename;
    });

    return function saveFile(_x, _x2) {
      return _ref.apply(this, arguments);
    };
  })();

  const readFile = filename => ghostManager.readFile(mediaDir, filename);

  return { saveFile, readFile };
};
//# sourceMappingURL=index.js.map