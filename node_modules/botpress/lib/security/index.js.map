{"version":3,"sources":["../../src/security/index.js"],"names":["module","exports","options","isDeveloping","schema","Joi","object","keys","dataLocation","string","min","required","projectLocation","securityConfig","db","cloud","logger","assert","isCloudPaired","useCloud","isPaired","enabled","NoneAuthentication","CloudAuthentication","RootAuthentication"],"mappings":";;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEAA,OAAOC,OAAP;AAAA,+BAAiB,WAAMC,OAAN,EAAiB;AAChC,QAAIC,kBAAJ,EAAkB;AAChB,YAAMC,SAASC,cAAIC,MAAJ,GAAaC,IAAb,CAAkB;AAC/BC,sBAAcH,cAAII,MAAJ,GACXC,GADW,CACP,CADO,EAEXC,QAFW,EADiB;AAI/BC,yBAAiBP,cAAII,MAAJ,GACdC,GADc,CACV,CADU,EAEdC,QAFc,EAJc;AAO/BE,wBAAgBR,cAAIC,MAAJ,GAAaK,QAAb,EAPe;AAQ/BG,YAAIT,cAAIC,MAAJ,GAAaK,QAAb,EAR2B;AAS/BI,eAAOV,cAAIC,MAAJ,GAAaK,QAAb,EATwB;AAU/BK,gBAAQX,cAAIC,MAAJ,GAAaK,QAAb;AAVuB,OAAlB,CAAf;;AAaAN,oBAAIY,MAAJ,CAAWf,OAAX,EAAoBE,MAApB,EAA4B,0DAA5B;AACD;;AAED,UAAMc,gBAAgBhB,QAAQW,cAAR,CAAuBM,QAAvB,KAAoC,MAAMjB,QAAQa,KAAR,CAAcK,QAAd,EAA1C,CAAtB;;AAEA,QAAI,CAAClB,QAAQW,cAAR,CAAuBQ,OAA5B,EAAqC;AACnC,aAAO,IAAIC,cAAJ,CAAuBpB,OAAvB,CAAP;AACD;;AAED,QAAIgB,aAAJ,EAAmB;AACjB,aAAO,IAAIK,eAAJ,CAAwBrB,OAAxB,CAAP;AACD,KAFD,MAEO;AACL,aAAO,IAAIsB,cAAJ,CAAuBtB,OAAvB,CAAP;AACD;AACF,GA7BD;;AAAA;AAAA;AAAA;AAAA","file":"index.js","sourcesContent":["import Joi from 'joi'\n\nimport RootAuthentication from './root'\nimport CloudAuthentication from './cloud'\nimport NoneAuthentication from './none'\nimport { isDeveloping } from '../util'\n\nmodule.exports = async options => {\n  if (isDeveloping) {\n    const schema = Joi.object().keys({\n      dataLocation: Joi.string()\n        .min(1)\n        .required(),\n      projectLocation: Joi.string()\n        .min(1)\n        .required(),\n      securityConfig: Joi.object().required(),\n      db: Joi.object().required(),\n      cloud: Joi.object().required(),\n      logger: Joi.object().required()\n    })\n\n    Joi.assert(options, schema, 'Invalid constructor elements for Authentication Provider')\n  }\n\n  const isCloudPaired = options.securityConfig.useCloud && (await options.cloud.isPaired())\n\n  if (!options.securityConfig.enabled) {\n    return new NoneAuthentication(options)\n  }\n\n  if (isCloudPaired) {\n    return new CloudAuthentication(options)\n  } else {\n    return new RootAuthentication(options)\n  }\n}\n"]}