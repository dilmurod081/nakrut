{"version":3,"sources":["../../src/server/secured.js"],"names":["module","exports","bp","app","secure","get","req","res","modules","_","map","_loadedModules","name","util","getModuleShortname","fullName","homepage","isPlugin","settings","menuText","menuIcon","noInterface","moduleView","stretched","plugins","send","getRandomCommunityHero","then","hero","bot","getContributor","middlewares","list","post","stats","track","body","setCustomizations","load","delete","resetCustomizations","notifications","getInbox","about","getBotInformation","licensing","changeLicense","license","sendStatus","catch","err","status","message","logger","queryDb","query","limit","results","console","log","setHeader","timestamp","level","time","Date","format","join","error","contentManager","listAvailableCategories","from","count","searchTerm","categoryId","orderBy","listCategoryItems","categoryItemsCount","getItem","params","id","getItems","ids","createOrUpdateCategoryItem","formData","itemId","deleteCategoryItems","ghostManager","getPending","getPendingWithContent","stringifyBinary","revertAllPendingChangesForFile","folder","file","mediaUploadMulter","limits","fileSize","single","filename","mediaManager","saveFile","originalname","buffer","url","json","flows","dialogEngine","getFlows","actions","getAvailableActions","flowProvider","saveFlows","skills","generateFlow","skillId","hidden"],"mappings":"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","file":"secured.js","sourcesContent":["import _ from 'lodash'\nimport multer from 'multer'\nimport moment from 'moment'\n\nimport util from '../util'\n\nmodule.exports = (bp, app) => {\n  // modules\n\n  app.secure('read', 'bot.modules.list').get('/api/modules', (req, res) => {\n    const modules = _.map(bp._loadedModules, module => {\n      return {\n        name: util.getModuleShortname(module.name),\n        fullName: module.name,\n        homepage: module.homepage,\n        isPlugin: module.settings.isPlugin,\n        menuText: module.settings.menuText || module.name,\n        menuIcon: module.settings.menuIcon || 'view_module',\n        noInterface: !!module.settings.noInterface,\n        moduleView: module.settings.moduleView || { stretched: false },\n        plugins: module.settings.plugins || []\n      }\n    })\n    res.send(modules)\n  })\n\n  app.secure('read', 'bot.modules.list.community').get('/api/module/hero', (req, res) => {\n    bp.modules.getRandomCommunityHero().then(hero => res.send(hero))\n  })\n\n  app.secure('read', 'bot.modules.list.community').get('/api/bot/contributor', (req, res) => {\n    res.send(bp.bot.getContributor())\n  })\n\n  // middleware\n\n  app.secure('read', 'bot.middleware.list').get('/api/middlewares', (req, res) => {\n    res.send(bp.middlewares.list())\n  })\n\n  app.secure('write', 'bot.middleware.customizations').post('/api/middlewares/customizations', (req, res) => {\n    bp.stats.track('api', 'middlewares', 'customizations')\n    const { middlewares } = req.body\n    bp.middlewares.setCustomizations(middlewares)\n    bp.middlewares.load()\n    res.send(bp.middlewares.list())\n  })\n\n  app.secure('write', 'bot.middleware.customizations').delete('/api/middlewares/customizations', (req, res) => {\n    bp.stats.track('api', 'middlewares', 'customizations')\n    bp.middlewares.resetCustomizations()\n    bp.middlewares.load()\n    res.send(bp.middlewares.list())\n  })\n\n  // notifications\n\n  // DEPRECATED in Botpress 1.1\n  app.secure('read', 'bot.notifications').get('/api/notifications', async (req, res) => {\n    res.send(await bp.notifications.getInbox())\n  })\n\n  app.secure('read', 'bot.notifications').get('/api/notifications/inbox', async (req, res) => {\n    res.send(await bp.notifications.getInbox())\n  })\n\n  // bot\n\n  app.secure('read', 'bot.information').get('/api/bot/information', (req, res) => {\n    res.send(bp.about.getBotInformation())\n  })\n\n  app.secure('write', 'bot.information.license').post('/api/license', (req, res) => {\n    bp.stats.track('api', 'license', 'change')\n    bp.licensing\n      .changeLicense(req.body.license)\n      .then(() => {\n        res.sendStatus(200)\n      })\n      .catch(err =>\n        res.status(500).send({\n          message: err && err.message\n        })\n      )\n  })\n\n  app.secure('read', 'bot.logs').get('/api/logs', (req, res) => {\n    bp.logger\n      .queryDb((req.query && req.query.limit) || 50)\n      .then(results => {\n        res.send(results)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  })\n\n  app.secure('read', 'bot.logs.archive').get('/api/logs/archive', (req, res) => {\n    bp.stats.track('api', 'logs', 'archive')\n\n    bp.logger\n      .queryDb(null, 'asc')\n      .then(results => {\n        res.setHeader('Content-type', 'text/plain')\n        res.setHeader('Content-disposition', 'attachment; filename=logs.txt')\n        res.send(\n          results\n            .map(({ timestamp, level, message }) => {\n              const time = moment(new Date(timestamp)).format('MMM DD HH:mm:ss')\n              return `${time} ${level}: ${message}`\n            })\n            .join('\\n')\n        )\n      })\n      .catch(err => {\n        console.error(err)\n        res.sendStatus(500)\n      })\n  })\n\n  app.secure('read', 'bot.content').get('/api/content/categories', async (req, res) => {\n    res.send(await bp.contentManager.listAvailableCategories())\n  })\n\n  app.secure('read', 'bot.content').get('/api/content/items', async (req, res) => {\n    const from = req.query.from || 0\n    const count = req.query.count || 50\n    let { searchTerm, categoryId, orderBy } = req.query\n\n    if (categoryId === 'all') {\n      categoryId = null\n    }\n\n    res.send(await bp.contentManager.listCategoryItems(categoryId, { from, count, searchTerm, orderBy }))\n  })\n\n  app.secure('read', 'bot.content').get('/api/content/items/count', async (req, res) => {\n    let { categoryId } = req.query\n    if (categoryId === 'all') {\n      categoryId = null\n    }\n    res.send({ count: await bp.contentManager.categoryItemsCount(categoryId) })\n  })\n\n  app.secure('read', 'bot.content').get('/api/content/items/:id', async (req, res) => {\n    res.send(await bp.contentManager.getItem(req.params.id))\n  })\n\n  app.secure('read', 'bot.content').get('/api/content/items-batched/:ids', async (req, res) => {\n    res.send(await bp.contentManager.getItems(req.params.ids))\n  })\n\n  app.secure('write', 'bot.content').post('/api/content/categories/:id/items', async (req, res) => {\n    res.send(\n      await bp.contentManager.createOrUpdateCategoryItem({\n        formData: req.body.formData,\n        categoryId: req.params.id\n      })\n    )\n  })\n\n  app.secure('write', 'bot.content').post('/api/content/categories/:id/items/:itemId', async (req, res) => {\n    await bp.contentManager.createOrUpdateCategoryItem({\n      itemId: req.params.itemId,\n      formData: req.body.formData,\n      categoryId: req.params.id\n    })\n    res.sendStatus(200)\n  })\n\n  app.secure('write', 'bot.content').post('/api/content/categories/all/bulk_delete', async (req, res) => {\n    await bp.contentManager.deleteCategoryItems(req.body)\n    res.sendStatus(200)\n  })\n\n  app.secure('read', 'bot.ghost_content').get('/api/ghost_content/status', async (req, res) => {\n    res.send(await bp.ghostManager.getPending())\n  })\n\n  app.secure('read', 'bot.ghost_content').get('/api/ghost_content/export', async (req, res) => {\n    res.send(await bp.ghostManager.getPendingWithContent({ stringifyBinary: true }))\n  })\n\n  app.secure('write', 'bot.ghost_content').delete('/api/ghost_content/:folder', async (req, res) => {\n    res.send(await bp.ghostManager.revertAllPendingChangesForFile(req.params.folder, req.query.file))\n  })\n\n  const mediaUploadMulter = multer({\n    limits: {\n      fileSize: 1024 * 1000 * 10 // 100mb\n    }\n  })\n\n  app.secure('write', 'bot.media').post('/api/media', mediaUploadMulter.single('file'), async (req, res) => {\n    const filename = await bp.mediaManager.saveFile(req.file.originalname, req.file.buffer)\n    const url = `/media/${filename}`\n    return res.json({ url })\n  })\n\n  app.secure('read', 'bot.flows').get('/api/flows/all', async (req, res) => {\n    const flows = await bp.dialogEngine.getFlows()\n    res.send(flows)\n  })\n\n  app.secure('read', 'bot.flows').get('/api/flows/available_actions', async (req, res) => {\n    const actions = bp.dialogEngine.getAvailableActions()\n    res.send(actions)\n  })\n\n  app.secure('write', 'bot.flows').post('/api/flows/save', async (req, res) => {\n    await bp.dialogEngine.flowProvider.saveFlows(req.body)\n    res.sendStatus(200)\n  })\n\n  app.secure('write', 'bot.skills').post('/api/skills/:skillId/generate', async (req, res) => {\n    res.send(await bp.skills.generateFlow(req.params.skillId, req.body))\n  })\n\n  app.get('/api/community/hero', (req, res) => {\n    res.send({ hidden: _.get(bp, 'botfile.heroSection.hidden', false) })\n  })\n}\n"]}